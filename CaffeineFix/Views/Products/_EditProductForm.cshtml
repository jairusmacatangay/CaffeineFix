@model CaffeineFix.Models.ProductViewModel

<form id="editForm" enctype="multipart/form-data">
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="col-6">
            @Html.HiddenFor(m => m.ProductID)
            <!--Product Name-->
            <div class="form-group">
                @Html.LabelFor(m => m.ProductName)
                @Html.TextBoxFor(m => m.ProductName, new { @class = "form-control", @id = "editProductName" })
                @Html.ValidationMessageFor(m => m.ProductName, "", new { @class = "text-danger small" })
            </div>
            <!--Product Category-->
            <div class="form-group">
                @Html.LabelFor(m => m.ProductCategoryID)
                @Html.DropDownListFor(m => m.ProductCategoryID, ViewBag.CategoryList as SelectList, "Select", new { @class = "form-control", @id = "editProductCategoryID" })
                @Html.ValidationMessageFor(m => m.ProductCategoryID, "", new { @class = "text-danger small" })
            </div>
            <!--Sub-Category-->
            <div class="form-group">
                <label>Sub-Category</label>
                @if (Model.RoastLevelID != 0)
                {
                    @Html.DropDownListFor(m => m.RoastLevelID, ViewBag.RoastLevelList as SelectList, new { @class = "form-control", @id = "editRoastLevelID" })
                    @Html.DropDownListFor(m => m.EquipmentTypeID, new SelectList(""), new { @class = "form-control", @style = "display: none", @id = "editEquipmentTypeID" })
                    @Html.DropDownListFor(m => m.DrinkwareTypeID, new SelectList(""), new { @class = "form-control", @style = "display: none", @id = "editDrinkwareTypeID" })
                    @Html.ValidationMessageFor(m => m.RoastLevelID, "", new { @class = "text-danger small" })
                    @Html.ValidationMessageFor(m => m.EquipmentTypeID, "", new { @class = "text-danger small" })
                    @Html.ValidationMessageFor(m => m.DrinkwareTypeID, "", new { @class = "text-danger small" })
                }
                else if (Model.EquipmentTypeID != 0)
                {
                    @Html.DropDownListFor(m => m.EquipmentTypeID, ViewBag.EquipmentTypeList as SelectList, new { @class = "form-control", @id = "editEquipmentTypeID" })
                    @Html.DropDownListFor(m => m.RoastLevelID, new SelectList(""), new { @class = "form-control", @style = "display: none", @id = "editRoastLevelID" })
                    @Html.DropDownListFor(m => m.DrinkwareTypeID, new SelectList(""), new { @class = "form-control", @style = "display: none", @id = "editDrinkwareTypeID" })
                    @Html.ValidationMessageFor(m => m.RoastLevelID, "", new { @class = "text-danger small" })
                    @Html.ValidationMessageFor(m => m.EquipmentTypeID, "", new { @class = "text-danger small" })
                    @Html.ValidationMessageFor(m => m.DrinkwareTypeID, "", new { @class = "text-danger small" })
                }
                else if (Model.DrinkwareTypeID != 0)
                {
                    @Html.DropDownListFor(m => m.DrinkwareTypeID, ViewBag.DrinkwareTypeList as SelectList, new { @class = "form-control", @id = "editDrinkwareTypeID" })
                    @Html.DropDownListFor(m => m.EquipmentTypeID, new SelectList(""), new { @class = "form-control", @style = "display: none", @id = "editEquipmentTypeID" })
                    @Html.DropDownListFor(m => m.RoastLevelID, new SelectList(""), new { @class = "form-control", @style = "display: none", @id = "editRoastLevelID" })
                    @Html.ValidationMessageFor(m => m.RoastLevelID, "", new { @class = "text-danger small" })
                    @Html.ValidationMessageFor(m => m.EquipmentTypeID, "", new { @class = "text-danger small" })
                    @Html.ValidationMessageFor(m => m.DrinkwareTypeID, "", new { @class = "text-danger small" })
                }
            </div>
            <!--Price-->
            <div class="form-group">
                @Html.LabelFor(m => m.Price)
                @Html.TextBoxFor(m => m.Price, new { @class = "form-control", @id = "editPrice" })
                @Html.ValidationMessageFor(m => m.Price, "", new { @class = "text-danger small" })
            </div>
            <!--Product Description-->
            <div class="form-group">
                @Html.LabelFor(m => m.Description)
                @Html.TextAreaFor(m => m.Description, new { @class = "form-control", @id = "editDescription" })
                @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger small" })
            </div>
        </div>
        <div class="col-6">
            <!--Image Upload-->
            @Html.HiddenFor(m => m.ImageID)
            <div class="form-group">
                @Html.LabelFor(m => m.ImageFile)
                <br />
                @Html.TextBoxFor(m => m.ImageFile, new { @type = "file", @id = "editImgBrowse" })
                <small class="form-text text-muted">Upload new image to replace current image</small>
            </div>
            <!--Image Preview-->
            <div id="imgPreview" class="img-thumbnail">
                <img src="@Model.ImagePath" class="img-fluid" id="targetImg" />
                <div class="figure-caption">
                    <a href="#" id="clearPreviewImg"><i class="fa fa-trash"></i></a>
                    <span id="description">Size: @Model.ImageSize, @Model.ImageHeight x @Model.ImageWidth</span>
                </div>
            </div>
        </div>
    </div>
    <a href="#" id="updateBtnSubmit" class="btn btn-primary">Update</a>
</form>

<script>
    $(document).ready(function () {

        $("#editProductCategoryID").change(function () {
            let productCategoryID = $(this).val();

            if (productCategoryID == 1) {
                $.ajax({
                    type: "POST",
                    url: "/Products/GetRoastLevelList?productCategoryID=" + productCategoryID,
                    contentType: "html",
                    success: function (response) {
                        $("#editEquipmentTypeID").hide();
                        $("#editDrinkwareTypeID").hide();
                        $("#editRoastLevelID").show();
                        $("#editRoastLevelID").empty();
                        $("#editRoastLevelID").append(response);
                        $("#editEquipmentTypeID").empty();
                        $("#editEquipmentTypeID").append("<option value=''>N/A</option>");
                        $("#editDrinkwareTypeID").empty();
                        $("#editDrinkwareTypeID").append("<option value=''>N/A</option>");
                    }
                })
            } else if (productCategoryID == 2) {
                $.ajax({
                    type: "POST",
                    url: "/Products/GetEquipmentTypeList?productCategoryID=" + productCategoryID,
                    contentType: "html",
                    success: function (response) {
                        $("#editRoastLevelID").hide();
                        $("#editDrinkwareTypeID").hide();
                        $("#editEquipmentTypeID").show();
                        $("#editEquipmentTypeID").empty();
                        $("#editEquipmentTypeID").append(response);
                        $("#editRoastLevelID").empty();
                        $("#editRoastLevelID").append("<option value=''>N/A</option>");
                        $("#editDrinkwareTypeID").empty();
                        $("#editDrinkwareTypeID").append("<option value=''>N/A</option>");
                    }
                })
            } else {
                $.ajax({
                    type: "POST",
                    url: "/Products/GetDrinkwareTypeList?productCategoryID=" + productCategoryID,
                    contentType: "html",
                    success: function (response) {
                        $("#editRoastLevelID").hide();
                        $("#editEquipmentTypeID").hide();
                        $("#editDrinkwareTypeID").show();
                        $("#editDrinkwareTypeID").empty();
                        $("#editDrinkwareTypeID").append(response);
                        $("#editRoastLevelID").empty();
                        $("#editRoastLevelID").append("<option value=''>N/A</option>");
                        $("#editEquipmentTypeID").empty();
                        $("#editEquipmentTypeID").append("<option value=''>N/A</option>");
                    }
                })
            }
        })

        $("#editImgBrowse").change(function () {
            var File = this.files;

            if (File && File[0]) {
                readImage(File[0]);
            }
        })

        let readImage = function (file) {
            var reader = new FileReader;
            var image = new Image;

            reader.readAsDataURL(file);
            reader.onload = function (_file) {
                image.src = _file.target.result;
                image.onload = function () {
                    var height = this.height;
                    var width = this.width;
                    var size = ~~(file.size / 1024) + "KB";

                    $("#targetImg").attr('src', _file.target.result);
                    $("#description").text("Size: " + size + ", " + height + " x " + width + "");
                    $("#imgPreview").show();
                }
            }
        }

        let clearPreview = function () {
            $("#editImgBrowse").val('');
            $("#description").text('');
            $("#imgPreview").hide();
        }

        document.getElementById("clearPreviewImg").addEventListener("click", clearPreview, false);

        $(document).on("click", "#updateBtnSubmit", function () {
            let editProductID = $("#ProductID").val();
            let editName = $("#editProductName").val();
            let editCategory = $("#editProductCategoryID").val();
            let editRoastLevel = $("#editRoastLevelID").val();
            let editEquipmentType = $("#editEquipmentTypeID").val();
            let editDrinkwareType = $("#editDrinkwareTypeID").val();
            let editPrice = $("#editPrice").val();
            let editDescription = $("#editDescription").val();
            let editImageID = $("#ImageID").val();
            let editFile = $("#editImgBrowse").get(0).files;

            let updateFormData = new FormData;
            updateFormData.append("ProductID", editProductID);
            updateFormData.append("ProductName", editName);
            updateFormData.append("ProductCategoryID", editCategory);
            updateFormData.append("RoastLevelID", editRoastLevel);
            updateFormData.append("EquipmentTypeID", editEquipmentType);
            updateFormData.append("DrinkwareTypeID", editDrinkwareType);
            updateFormData.append("Price", editPrice);
            updateFormData.append("Description", editDescription);
            updateFormData.append("ImageID", editImageID);
            updateFormData.append("ImageFile", editFile[0]);

            if ($("#editForm").valid()) {
                $.ajax({
                    type: "POST",
                    url: "/Products/UpdateProduct",
                    data: updateFormData,
                    processData: false,
                    contentType: false,
                    success: function () {
                        clearPreview();
                        $("#editModal").modal("hide");
                        $("#updateAlert").show();
                        $("#updateAlert").delay(3000).fadeOut();
                        $("#myDataTable").DataTable().ajax.reload();
                    }
                })
            }
            $(document).off("click", "#updateBtnSubmit");
        })

    })
</script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
