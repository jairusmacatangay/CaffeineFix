@model CaffeineFix.Models.ProductViewModel

<form id="editForm" enctype="multipart/form-data">
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="col-6">
            @Html.HiddenFor(m => m.ProductID)
            <!--Product Name-->
            <div class="form-group">
                @Html.LabelFor(m => m.ProductName)
                @Html.TextBoxFor(m => m.ProductName, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.ProductName, "", new { @class = "text-danger small" })
            </div>
            <!--Product Category-->
            <div class="form-group">
                @Html.LabelFor(m => m.ProductCategoryID)
                @Html.DropDownListFor(m => m.ProductCategoryID, ViewBag.CategoryList as SelectList, "Select", new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.ProductCategoryID, "", new { @class = "text-danger small" })
            </div>
            <!--Sub-Category-->
            <div class="form-group">
                <label>Sub-Category</label>
                @if (Model.RoastLevelID != 0)
                {
                    @Html.DropDownListFor(m => m.RoastLevelID, ViewBag.RoastLevelList as SelectList, new { @class = "form-control" })
                    @Html.DropDownListFor(m => m.EquipmentTypeID, new SelectList(""), new { @class = "form-control", @style = "display: none" })
                    @Html.DropDownListFor(m => m.DrinkwareTypeID, new SelectList(""), new { @class = "form-control", @style = "display: none" })
                    @Html.ValidationMessageFor(m => m.RoastLevelID, "", new { @class = "text-danger small" })
                    @Html.ValidationMessageFor(m => m.EquipmentTypeID, "", new { @class = "text-danger small" })
                    @Html.ValidationMessageFor(m => m.DrinkwareTypeID, "", new { @class = "text-danger small" })
                }
                else if (Model.EquipmentTypeID != 0)
                {
                    @Html.DropDownListFor(m => m.EquipmentTypeID, ViewBag.EquipmentTypeList as SelectList, new { @class = "form-control" })
                    @Html.DropDownListFor(m => m.RoastLevelID, new SelectList(""), new { @class = "form-control", @style = "display: none" })
                    @Html.DropDownListFor(m => m.DrinkwareTypeID, new SelectList(""), new { @class = "form-control", @style = "display: none" })
                    @Html.ValidationMessageFor(m => m.RoastLevelID, "", new { @class = "text-danger small" })
                    @Html.ValidationMessageFor(m => m.EquipmentTypeID, "", new { @class = "text-danger small" })
                    @Html.ValidationMessageFor(m => m.DrinkwareTypeID, "", new { @class = "text-danger small" })
                }
                else if (Model.DrinkwareTypeID != 0)
                {
                    @Html.DropDownListFor(m => m.DrinkwareTypeID, ViewBag.DrinkwareTypeList as SelectList, new { @class = "form-control" })
                    @Html.DropDownListFor(m => m.EquipmentTypeID, new SelectList(""), new { @class = "form-control", @style = "display: none" })
                    @Html.DropDownListFor(m => m.RoastLevelID, new SelectList(""), new { @class = "form-control", @style = "display: none" })
                    @Html.ValidationMessageFor(m => m.RoastLevelID, "", new { @class = "text-danger small" })
                    @Html.ValidationMessageFor(m => m.EquipmentTypeID, "", new { @class = "text-danger small" })
                    @Html.ValidationMessageFor(m => m.DrinkwareTypeID, "", new { @class = "text-danger small" })
                }
            </div>
            <!--Price-->
            <div class="form-group">
                @Html.LabelFor(m => m.Price)
                @Html.TextBoxFor(m => m.Price, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Price, "", new { @class = "text-danger small" })
            </div>
            <!--Product Description-->
            <div class="form-group">
                @Html.LabelFor(m => m.Description)
                @Html.TextAreaFor(m => m.Description, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger small" })
            </div>
        </div>
        <div class="col-6">
            <!--Image Upload-->
            @Html.HiddenFor(m => m.ImageID)
            <div class="form-group">
                @Html.LabelFor(m => m.ImageFile)
                <br />
                @Html.TextBoxFor(m => m.ImageFile, new { type = "file", @id = "imgBrowse" })
                <small class="form-text text-muted">Upload new image to replace current image</small>
            </div>
            <!--Image Preview-->
            <div id="imgPreview" class="img-thumbnail">
                <img src="@Model.ImagePath" class="img-fluid" id="targetImg" />
                <div class="figure-caption">
                    <a href="#" id="clearPreviewImg"><i class="fa fa-trash"></i></a>
                    <span id="description">Size: @Model.ImageSize, @Model.ImageHeight x @Model.ImageWidth</span>
                </div>
            </div>
        </div>
    </div>
    <a href="#" id="btnSubmit" class="btn btn-primary">Update</a>
</form>

<script>
    $(document).ready(function () {

        $("#ProductCategoryID").change(function () {
            let productCategoryID = $(this).val();

            if (productCategoryID == 1) {
                $.ajax({
                    type: "POST",
                    url: "/Products/GetRoastLevelList?productCategoryID=" + productCategoryID,
                    contentType: "html",
                    success: function (response) {
                        $("#EquipmentTypeID").hide();
                        $("#DrinkwareTypeID").hide();
                        $("#RoastLevelID").show();
                        $("#RoastLevelID").empty();
                        $("#RoastLevelID").append(response);
                        $("#EquipmentTypeID").empty();
                        $("#EquipmentTypeID").append("<option value=''>N/A</option>");
                        $("#DrinkwareTypeID").empty();
                        $("#DrinkwareTypeID").append("<option value=''>N/A</option>");
                    }
                })
            } else if (productCategoryID == 2) {
                $.ajax({
                    type: "POST",
                    url: "/Products/GetEquipmentTypeList?productCategoryID=" + productCategoryID,
                    contentType: "html",
                    success: function (response) {
                        $("#RoastLevelID").hide();
                        $("#DrinkwareTypeID").hide();
                        $("#EquipmentTypeID").show();
                        $("#EquipmentTypeID").empty();
                        $("#EquipmentTypeID").append(response);
                        $("#RoastLevelID").empty();
                        $("#RoastLevelID").append("<option value=''>N/A</option>");
                        $("#DrinkwareTypeID").empty();
                        $("#DrinkwareTypeID").append("<option value=''>N/A</option>");
                    }
                })
            } else {
                $.ajax({
                    type: "POST",
                    url: "/Products/GetDrinkwareTypeList?productCategoryID=" + productCategoryID,
                    contentType: "html",
                    success: function (response) {
                        $("#RoastLevelID").hide();
                        $("#EquipmentTypeID").hide();
                        $("#DrinkwareTypeID").show();
                        $("#DrinkwareTypeID").empty();
                        $("#DrinkwareTypeID").append(response);
                        $("#RoastLevelID").empty();
                        $("#RoastLevelID").append("<option value=''>N/A</option>");
                        $("#EquipmentTypeID").empty();
                        $("#EquipmentTypeID").append("<option value=''>N/A</option>");
                    }
                })
            }
        })

        $("#btnSubmit").click(function () {
            let productID = $("#ProductID").val();
            let name = $("#ProductName").val();
            let category = $("#ProductCategoryID").val();
            let roastLevel = $("#RoastLevelID").val();
            let equipmentType = $("#EquipmentTypeID").val();
            let drinkwareType = $("#DrinkwareTypeID").val();
            let price = $("#Price").val();
            let description = $("#Description").val();
            let imageID = $("#ImageID").val();
            let file = $("#imgBrowse").get(0).files;

            let formData = new FormData;
            formData.append("ProductID", productID);
            formData.append("ProductName", name);
            formData.append("ProductCategoryID", category);
            formData.append("RoastLevelID", roastLevel);
            formData.append("EquipmentTypeID", equipmentType);
            formData.append("DrinkwareTypeID", drinkwareType);
            formData.append("Price", price);
            formData.append("Description", description);
            formData.append("ImageID", imageID);
            formData.append("ImageFile", file[0]);

            if ($("#editForm").valid()) {
                $.ajax({
                    type: "POST",
                    url: "/Products/UpdateProduct",
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function () {
                        clearPreview();
                        $("#editModal").modal("hide");
                        window.location.href = "/Products/Index";
                    }
                })
            }
        })

        $("#imgBrowse").change(function () {
            var File = this.files;

            if (File && File[0]) {
                readImage(File[0]);
            }
        })

        let readImage = function (file) {
            var reader = new FileReader;
            var image = new Image;

            reader.readAsDataURL(file);
            reader.onload = function (_file) {
                image.src = _file.target.result;
                image.onload = function () {
                    var height = this.height;
                    var width = this.width;
                    var size = ~~(file.size / 1024) + "KB";

                    $("#targetImg").attr('src', _file.target.result);
                    $("#description").text("Size: " + size + ", " + height + " x " + width + "");
                    $("#imgPreview").show();
                }
            }
        }

        let clearPreview = function () {
            $("#imgBrowse").val('');
            $("#description").text('');
            $("#imgPreview").hide();
        }

        document.getElementById("clearPreviewImg").addEventListener("click", clearPreview, false);
    })
</script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
